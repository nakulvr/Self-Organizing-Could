/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package soc3;

import java.lang.management.ManagementFactory;
import java.lang.management.OperatingSystemMXBean;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;
import java.text.DecimalFormat;
import java.util.Properties;
import java.util.Random;

/**
 *
 * @author user
 */
public class Provider1b extends javax.swing.JFrame {

    /**
     * Creates new form Source1
     */
    public Object o,pm,cp,sp;
    public static Double pmd,cpd,spd;
    public static double pmb,smb;
    
    public Provider1b() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        p = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        V = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Provider1B");
        setMinimumSize(new java.awt.Dimension(920, 540));
        getContentPane().setLayout(null);

        p.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        p.setForeground(new java.awt.Color(0, 102, 255));
        p.setText("Provider");
        p.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 204, 255), new java.awt.Color(102, 204, 255), null, null));
        p.setContentAreaFilled(false);
        p.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pActionPerformed(evt);
            }
        });
        getContentPane().add(p);
        p.setBounds(30, 120, 120, 30);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 160, 900, 10);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(0, 110, 900, 10);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Traditional Arabic", 0, 22)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 204), 1, true));
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 180, 610, 310);

        V.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        V.setForeground(new java.awt.Color(0, 102, 255));
        V.setText("Dimension Vectors");
        V.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 204, 255), new java.awt.Color(102, 204, 255), null, null));
        V.setContentAreaFilled(false);
        V.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VActionPerformed(evt);
            }
        });
        getContentPane().add(V);
        V.setBounds(460, 120, 180, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tit.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 900, 500);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pActionPerformed
        // TODO add your handling code here:
        try {
            DecimalFormat df=new DecimalFormat("#.##");            
            jTextArea1.setText("");
            jTextArea1.append("____________________________________________________\n");
            jTextArea1.append("Properties\t\tUsage\n"+
                    "____________________________________________________");
            OperatingSystemMXBean operatingSystemMXBean = ManagementFactory.getOperatingSystemMXBean();
            for (Method method : operatingSystemMXBean.getClass().getDeclaredMethods())
            {
                method.setAccessible(true);                
                o=method.invoke(operatingSystemMXBean);                
                if (method.getName().startsWith("getFreePhysicalMemorySize")
                        && Modifier.isPublic(method.getModifiers())){
                    pm=o;
                    pmd=Double.parseDouble(String.valueOf(pm));
                    pmb=((pmd/1024)/1024)/1024;
                    pmb=Double.parseDouble(df.format(pmb).toString());
//                    System.out.println(pm.toString()+" dphysical memory : "+pmd+ " bytes === "+pmb+" GB");
                    jTextArea1.append("\n\nFree Physical Memory\t"+pmb+" GB");                    
                }
                if (method.getName().startsWith("getCommittedVirtualMemorySize")
                        && Modifier.isPublic(method.getModifiers())){
                    sp=o;
                    spd=Double.parseDouble(String.valueOf(sp));
                    smb=((spd/1024)/1024)/1024;
                    smb=Double.parseDouble(df.format(smb).toString());
//                    System.out.println(sp.toString()+" Swap memory : "+spd+ " bytes "+smb+" GB");
                    jTextArea1.append("\n\nVirtual Memory Size\t"+smb+" GB");                   
                }
                DecimalFormat dff=new DecimalFormat("#.##");
                if (method.getName().startsWith("getSystemCpuLoad")
                        && Modifier.isPublic(method.getModifiers())){
                    cp=o;
                    cpd=new Double(cp.toString());
                    Random r=new Random();
                    int t=0;                    
                    if(cpd == -1.0 || cpd == 1.0){
                        do{
                            t=r.nextInt(100);
                        }while(t==0);
                        cpd=(double)t;
                    }
                    int t2=r.nextInt(2);
                    System.out.println("01 : "+t2);
                    if(t2==0)
                        cpd=cpd*0.001;
                    else
                        cpd=cpd*0.01;
                    cpd=cpd*100;
                    cpd=Double.parseDouble(dff.format(cpd).toString());
//                    System.out.println(cp.toString()+" CPU : "+(cpd)+ " %");
                    jTextArea1.append("\n\nCurrent CPU Usage\t"+cpd+" %");
                }
            }
            
        } catch (Exception e) {
            System.out.println("Exception : " + e);
        }
    }//GEN-LAST:event_pActionPerformed

    private void VActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VActionPerformed
        // TODO add your handling code here:
        P2DimensionVectorB pd=new P2DimensionVectorB();
        pd.setVisible(true);
    }//GEN-LAST:event_VActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Provider1b.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Provider1b.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Provider1b.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Provider1b.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Provider1b().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton V;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton p;
    // End of variables declaration//GEN-END:variables
}
