/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package soc1;

import java.io.File;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

import java.sql.*;
import java.io.*;
import java.util.*;
import com.lowagie.text.*;
import com.lowagie.text.pdf.*;

/**
 *
 * @author etpl22
 */
public class Sample extends javax.swing.JFrame {

    /**
     * Creates new form Sample
     */
    Connection con;
    Statement st;
    
    public static String taskId="";
    public static double e[]=new double[3];
    public static double w[]=new double[3];
    public static double b=0.0;
    
    public Sample() {
        try {
            initComponents();
            Class.forName("com.mysql.jdbc.Driver");
                con=DriverManager.getConnection("jdbc:mysql://localhost:3306/socDB","root","");
                st=con.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(Sample.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Sample.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("read pdf");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jButton1)
                .addContainerGap(306, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(163, 163, 163)
                    .addComponent(jButton2)
                    .addContainerGap(164, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jButton1)
                .addContainerGap(249, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(138, 138, 138)
                    .addComponent(jButton2)
                    .addContainerGap(139, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            ResultSet rs;//=st.executeQuery("select * from task");
            rs=st.executeQuery("select count(*) from task");
            int count=0;
            while(rs.next()){
                count=rs.getInt(1);
            }
            System.out.println(count);
            int c=count-3;
            rs=st.executeQuery("select * from task");
            int i=0,j=0;
            
                while(rs.next()){
                    i++;
                    System.out.println(i+" c : "+c);
                    if(i>c){
                        taskId= rs.getString(1);
                        e[j]=rs.getDouble(3);
                        w[j]=rs.getDouble(4);
                        b=rs.getDouble(6);
                        System.out.println(taskId+" "+e[j]+" "+w[j]+" "+b+" jval : "+j+" ival : "+i);
                    j++;
                    }
                }
                //System.out.println(taskId+" "+e+" "+w+" "+b);
        } catch (SQLException ex) {
            Logger.getLogger(Sample.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
//            

            try {

//                File f=new File("rfidtext.txt");
                File f = new File("cloud50.txt");
                if (f.exists()) {
                } else {
                    f.createNewFile();
                }
                BufferedWriter bw = new BufferedWriter(new FileWriter(f, true));


                Document document = new Document();
                document.open();
                String[] all = new String[700];
//                    PdfReader reader = new PdfReader("a_rfid_proximity_card_data_set.pdf");
                PdfReader reader = new PdfReader("pdfFile.pdf");
                for (int i = 1; i <= 700; i++) {
                    PdfDictionary dictionary = reader.getPageN(i);
                    PRIndirectReference reference = (PRIndirectReference) dictionary.get(PdfName.CONTENTS);
                    PRStream stream = (PRStream) PdfReader.getPdfObject(reference);
                    byte[] bytes = PdfReader.getStreamBytes(stream);
                    PRTokeniser tokenizer = new PRTokeniser(bytes);
                    StringBuffer buffer = new StringBuffer();
                    while (tokenizer.nextToken()) {
                        if (tokenizer.getTokenType() == PRTokeniser.TK_STRING) {
                            buffer.append(tokenizer.getStringValue());

                        }
                    }
                    String test = buffer.toString();

//                    test = test.substring(test.indexOf(".") + 1);
//                    test = test.substring(test.indexOf(" ") + 1);
                    System.out.println(test);
                    //all[i - 4] = test;
//                    all[i-1]=test;
//
//                    StringTokenizer st = new StringTokenizer(test, "   ");
//                    int j = 0;
//                    String token = "";
//                    while (st.hasMoreTokens()) {
//                        j++;
//                        token = st.nextToken();
//                            System.out.print(token+" ");
//                        bw.write(token + " ");
//                        if (j == 4) {
//                            if (token.equals("denied-foreigncard")) {
//                                j++;
//                            }
//                        }
//                        if (j == 6) {
//                                System.out.println();
//                            bw.newLine();
//                            j = 0;
//                        }
//
//                    }
                }
//                bw.close();

            } catch (Exception e) {
            }

        } catch (Exception e) {
            System.out.println("Exception : " + e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Sample().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}
