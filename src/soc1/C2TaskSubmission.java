/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package soc1;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.PrintStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Random;

/**
 *
 * @author user
 */
public class C2TaskSubmission extends javax.swing.JFrame {

    /**
     * Creates new form C2TaskSubmission
     */
    public static File f=Consumer.f;
    public double expectedMem=Consumer.expectedMem;
    double cpuProcessLoad=Consumer.cpuProcessLoad;
    double budget=Consumer.budget;
    double expectedVm=Consumer.expectedSwap;
    
    public static double[] etij=Consumer.etij;
    public static double[] wtij=Consumer.wtij;
    public static double[] Btij=Consumer.Btij;
    
    public C2TaskSubmission() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        V = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(920, 540));
        getContentPane().setLayout(null);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 110, 900, 10);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(0, 160, 900, 10);

        V.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        V.setForeground(new java.awt.Color(0, 102, 255));
        V.setText("Task Submission");
        V.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 204, 255), new java.awt.Color(102, 204, 255), null, null));
        V.setContentAreaFilled(false);
        V.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VActionPerformed(evt);
            }
        });
        getContentPane().add(V);
        V.setBounds(30, 120, 180, 30);

        jLabel2.setFont(new java.awt.Font("Traditional Arabic", 0, 24)); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 170, 500, 60);

        jLabel3.setFont(new java.awt.Font("Traditional Arabic", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 255));
        getContentPane().add(jLabel3);
        jLabel3.setBounds(40, 260, 450, 40);

        jLabel4.setFont(new java.awt.Font("Traditional Arabic", 0, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 255));
        getContentPane().add(jLabel4);
        jLabel4.setBounds(40, 330, 450, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tit.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 900, 500);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VActionPerformed
        // TODO add your handling code here:
        try {
            //=============================Task ID Generation========================
            int n1,n2,ns1,ns2;
            char s1,s2;
            String taskId;
            Random r=new Random();
            do{                
                n1=r.nextInt(1000);
            }while(n1<100 || n1==1000);
            do{                
                n2=r.nextInt(1000);
            }while(n2<100 || n2==1000);
            do{                
                ns1=r.nextInt(100);
            }while(ns1<65 || ns1>90);
            do{                
                ns2=r.nextInt(122);
            }while(ns2<97);
            s1=(char)ns1;
            s2=(char)ns2;
            taskId=s1+String.valueOf(n1)+s2+String.valueOf(n2);
            System.out.println(taskId);
            
            ServerSocket ss=new ServerSocket(1000);
            Socket sk=ss.accept();
            System.out.println("Waiting");
            PrintStream ps=new PrintStream(sk.getOutputStream());
            
            BufferedReader br=new BufferedReader(new FileReader(f));
            String read=""; 
            
            ps.println(taskId);
            ps.println(f.getName());
            ps.println(etij.length);
            
            System.out.println("chello");
            
            for(int i=0;i<etij.length;i++){
                ps.println(etij[i]);
            }
            
            System.out.println("chello");
            
            for(int i=0;i<wtij.length;i++){
                ps.println(wtij[i]);
            }
            
            System.out.println("chello");
            
            for(int i=0;i<Btij.length;i++){
                ps.println(Btij[i]);
            }
            
            System.out.println("chello");
            
            ps.println(budget);
            
            System.out.println("chello");
            
            while((read=br.readLine())!=null){
                ps.println(read);
            }
            
            System.out.println("chellox");
            sk.close();
            ps.close();
            
            jLabel2.setText("Request Sent Successfully !!!");
            jLabel3.setText("Task ID   : "+taskId);
            String fName=taskId+"_"+f.getName();
            jLabel4.setText("File Name : "+fName);
            
        } catch (Exception e) {
            System.out.println("Exception " + e);
        }
    }//GEN-LAST:event_VActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(C2TaskSubmission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(C2TaskSubmission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(C2TaskSubmission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(C2TaskSubmission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new C2TaskSubmission().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton V;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
